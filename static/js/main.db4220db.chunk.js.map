{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/tableColumns.js","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App/App.styled.js","components/App/App.jsx","index.js","theme/index.js"],"names":["StyledSection","Title","Section","title","children","FeedbackOptions","options","onLeaveFeedback","gutter","map","btn","className","span","block","onClick","columns","dataIndex","key","Statistics","props","data","dataSource","pagination","bordered","Notification","text","Container","App","state","good","neutral","bad","handleIncrementFeedback","name","setState","prevState","getTotalFeedback","Object","values","reduce","a","b","getPositivePercentage","total","Math","round","this","isFeedbacks","keys","positivePercentage","Component","ReactDOM","render","StrictMode","theme","colors","black","document","getElementById"],"mappings":"6RAEO,IAAMA,EAAa,qFAIbC,EAAK,oH,QCFH,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAACJ,EAAD,WACGG,GAAS,cAACF,EAAD,UAAQE,IACjBC,K,8BCHQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACGF,EAAQG,KAAI,SAAAC,GAAG,OACd,cAAC,IAAD,CAAwBC,UAAU,aAAaC,KAAM,EAArD,SACE,cAAC,IAAD,CAASC,OAAK,EAACC,QAAS,kBAAMP,EAAgBG,IAA9C,SACGA,KAFL,UAAaA,EAAb,c,sBCTKK,EAAU,CACrB,CACEZ,MAAO,OACPa,UAAW,OACXC,IAAK,QAEP,CACEd,MAAO,UACPa,UAAW,UACXC,IAAK,WAEP,CACEd,MAAO,MACPa,UAAW,MACXC,IAAK,OAEP,CACEd,MAAO,QACPa,UAAW,QACXC,IAAK,SAEP,CACEd,MAAO,oBACPa,UAAW,qBACXC,IAAK,uBCjBM,SAASC,EAAWC,GACjC,IAAMC,EAAO,CAAC,aAEVH,IAAK,KACFE,IAIP,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,cAAC,IAAD,CACEG,QAASA,EACTM,WAAYD,EACZE,YAAY,EACZC,UAAQ,QCtBH,SAASC,EAAT,GAAiC,IAATC,EAAQ,EAARA,KACrC,OAAO,4BAAIA,ICCN,IAAMC,EAAS,gHCODC,E,4MACnBC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,wBAA0B,SAAAC,GACxB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAI9BG,iBAAmB,WACjB,OAAOC,OAAOC,OAAO,EAAKV,OAAOW,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAGxDC,sBAAwB,WACtB,IAAMC,EAAQ,EAAKP,mBACXP,EAAS,EAAKD,MAAdC,KAER,OAAiB,IAAVc,EAAA,UAAiBC,KAAKC,MAAOhB,EAAOc,EAAS,KAA7C,W,4CAGT,WACE,MAA+BG,KAAKlB,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBgB,EAAcD,KAAKV,mBAAqB,EAE9C,OACE,eAACV,EAAD,WACE,cAACxB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS+B,OAAOW,KAAKF,KAAKlB,OAC1BrB,gBAAiBuC,KAAKd,4BAI1B,cAAC9B,EAAD,CAASC,MAAM,aAAf,SACG4C,EACC,cAAC7B,EAAD,CACEW,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLY,MAAOG,KAAKV,mBACZa,mBAAoBH,KAAKJ,0BAG3B,cAAClB,EAAD,CAAcC,KAAK,+B,GA/CEyB,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,MCVJ,CACbC,OAAQ,CACNC,MAAO,YDQP,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.db4220db.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\nexport const StyledSection = styled.section`\r\n  padding: 24px 0;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: 24px;\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { StyledSection, Title } from './Section.styled';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <StyledSection>\r\n      {title && <Title>{title}</Title>}\r\n      {children}\r\n    </StyledSection>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any.isRequired,\r\n};","import PropTypes from 'prop-types';\r\n\r\nimport { Row, Col } from 'antd';\r\nimport { Button } from 'antd';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <Row gutter={16}>\r\n      {options.map(btn => (\r\n        <Col key={`${btn}-btn`} className=\"gutter-row\" span={3}>\r\n          <Button  block onClick={() => onLeaveFeedback(btn)}>\r\n            {btn}\r\n          </Button>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};","export const columns = [\r\n  {\r\n    title: 'Good',\r\n    dataIndex: 'good',\r\n    key: 'good',\r\n  },\r\n  {\r\n    title: 'Neutral',\r\n    dataIndex: 'neutral',\r\n    key: 'neutral',\r\n  },\r\n  {\r\n    title: 'Bad',\r\n    dataIndex: 'bad',\r\n    key: 'bad',\r\n  },\r\n  {\r\n    title: 'Total',\r\n    dataIndex: 'total',\r\n    key: 'total',\r\n  },\r\n  {\r\n    title: 'Positive feedback',\r\n    dataIndex: 'positivePercentage',\r\n    key: 'positivePercentage',\r\n  },\r\n];","import PropTypes from 'prop-types';\r\n\r\nimport { Table } from 'antd';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport { columns } from './tableColumns';\r\n\r\nexport default function Statistics(props) {\r\n  const data = [\r\n    {\r\n      key: '1',\r\n      ...props,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={6}>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          pagination={false}\r\n          bordered\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};","export default function Notification({ text }) {\r\n  return <p>{text}</p>;\r\n}","import styled from '@emotion/styled/macro';\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1140px;\r\n  padding: 0 20px;\r\n  margin: 0 auto;\r\n`;","import React, { Component } from 'react';\r\n\r\nimport Section from '../Section';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Statistics from '../Statistics';\r\nimport Notification from '../Notification';\r\n\r\nimport { Container } from './App.styled';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrementFeedback = name => {\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  getTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((a, b) => a + b);\r\n  };\r\n\r\n  getPositivePercentage = () => {\r\n    const total = this.getTotalFeedback();\r\n    const { good } = this.state;\r\n\r\n    return total !== 0 ? `${Math.round((good / total) * 100)}%` : `0%`;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const isFeedbacks = this.getTotalFeedback() > 0;\r\n\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.handleIncrementFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {isFeedbacks ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.getTotalFeedback()}\r\n              positivePercentage={this.getPositivePercentage()}\r\n            />\r\n          ) : (\r\n            <Notification text=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </Container>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\n\nimport theme from './theme';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  colors: {\r\n    black: '#000000',\r\n  },\r\n};"],"sourceRoot":""}